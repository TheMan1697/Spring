package works.yermi.mapper;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import lombok.Setter;
import lombok.extern.log4j.Log4j;
import works.yermi.domain.AuthVO;
import works.yermi.domain.MemberVO;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration({
	"file:src/main/webapp/WEB-INF/spring/root-context.xml", 
	"file:src/main/webapp/WEB-INF/spring/security-context.xml"
})

@Log4j
public class MemberMapperTests {
	@Setter @Autowired
	private PasswordEncoder encoder;
	@Setter @Autowired 
	private MemberMapper mapper;
	
	@Test // 회원 정보 조회
	public void testRead(){
		log.info(mapper.read("id1"));
	}

	// <회원가입>
	@Test // 회원 생성
	public void testInsertMember(){
		MemberVO vo = new MemberVO();
		vo.setUserId("id1");
		vo.setPw(encoder.encode("1234"));
		vo.setEmail("sample@yermi.works");
		vo.setPhone("010-0000-0000");
		vo.setEmd("읍면동");
		vo.setRoadAddr("도로명주소");
		vo.setAddrDetail("상세주소");
		vo.setZipNo("우편no");
		vo.setRoadFullAddr("도로명주소 전체");
		vo.setJibunAddr("지번");
		vo.setSi("시");
		vo.setName("가입테스트");
		vo.setNickName("가입테스트닉");
		
		log.info(vo);
		mapper.insertMember(vo);
	}

	@Test // 권한 생성
	public void testInsertAuth(){
		AuthVO vo = new AuthVO();
		
//		vo.setAuth("ROLE_MEMBER");
		vo.setAuth("ROLE_MANAGER");
//		vo.setAuth("ROLE_ADMIN");
		vo.setUserId("id test");
		
		mapper.insertAuth(vo);
	}
	
	// <회원정보수정>
	@Test // 회원 수정
	public void testUpdateMember(){
		MemberVO vo = new MemberVO();
		vo.setPw(encoder.encode("1234"));
		vo.setEmail("sample@yermi.works");
		vo.setPhone("010-0000-0000");

		vo.setPoint(1);
		
		vo.setEmd("읍면동");
		vo.setRoadAddr("도로명주소");
		vo.setAddrDetail("상세주소");
		vo.setZipNo("우편no");
		vo.setRoadFullAddr("도로명주소 전체");
		vo.setJibunAddr("지번");
		vo.setSi("시");
		vo.setName("관리자2");
		vo.setNickName("관리자닉2");
		
		vo.setUserId("id1");

		mapper.updateMember(vo);
		log.info(vo);
	}

	@Test // 권한 수정
	public void testUpdateAuth(){
		AuthVO vo = new AuthVO();
		vo.setAuth("ROLE_MEMBER");
//		vo.setAuth("ROLE_MANAGER");
//		vo.setAuth("ROLE_ADMIN");
		
		int result = mapper.updateAuth(vo);
		
		log.info(result);
		log.info(vo);
	}
	
	// <회원탈퇴>
	@Test // 회원 삭제
	public void testDeleteMember(){
		String userId = "id9";
		mapper.deleteMember(userId);
	}

	@Test // 권한 삭제
	public void testDeleteAuth(){
		mapper.deleteAuth("id9");
	}
	
	@Test
	public void testLogin(){
		
	}
	

}
